import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { AIInsight } from "@/data/salesData";
import { TrendingUp, AlertTriangle, Lightbulb, MessageSquare, Bot, User, Send } from "lucide-react";
import { cn } from "@/lib/utils";
import { useState } from "react";

interface AIInsightsPanelProps {
  insights: AIInsight[];
}

export const AIInsightsPanel = ({ insights }: AIInsightsPanelProps) => {
  const [inputMessage, setInputMessage] = useState("");

  const handleSendMessage = () => {
    if (inputMessage.trim()) {
      // Placeholder for future functionality
      console.log("Message sent:", inputMessage);
      setInputMessage("");
    }
  };

  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {
    if (e.key === "Enter" && !e.shiftKey) {
      e.preventDefault();
      handleSendMessage();
    }
  };

  const getInsightIcon = (type: AIInsight['type']) => {
    switch (type) {
      case 'trend':
        return <TrendingUp className="h-5 w-5 text-primary" />;
      case 'alert':
        return <AlertTriangle className="h-5 w-5 text-warning" />;
      case 'opportunity':
        return <Lightbulb className="h-5 w-5 text-success" />;
    }
  };

  const getImpactBadge = (impact: AIInsight['impact']) => {
    const variants = {
      high: "bg-destructive/10 text-destructive border-destructive/20",
      medium: "bg-warning/10 text-warning border-warning/20",
      low: "bg-muted text-muted-foreground border-border",
    };

    return (
      <Badge variant="outline" className={cn("text-xs", variants[impact])}>
        {impact.toUpperCase()} IMPACT
      </Badge>
    );
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Lightbulb className="h-5 w-5 text-primary" />
          AI-Powered Insights
        </CardTitle>
        <CardDescription>
          Natural language analysis and predictions generated by advanced forecasting models
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-6">
        {/* Insights List */}
        <div className="space-y-4">
          {insights.map((insight) => (
            <div
              key={insight.id}
              className="rounded-lg border bg-card p-4 transition-colors hover:bg-accent/50"
            >
              <div className="flex items-start gap-3">
                <div className="mt-1">{getInsightIcon(insight.type)}</div>
                <div className="flex-1 space-y-2">
                  <div className="flex items-start justify-between gap-2">
                    <h4 className="font-semibold text-foreground">{insight.title}</h4>
                    {getImpactBadge(insight.impact)}
                  </div>
                  <p className="text-sm text-muted-foreground leading-relaxed">
                    {insight.description}
                  </p>
                  {insight.fiscalYear && (
                    <div className="flex items-center gap-2 text-xs text-muted-foreground">
                      <span className="font-medium">Target Year:</span>
                      <Badge variant="secondary" className="text-xs">
                        {insight.fiscalYear}
                      </Badge>
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>

        {/* AI Chatbot Sample */}
        <div className="border-t pt-6">
          <div className="flex items-center gap-2 mb-4">
            <MessageSquare className="h-5 w-5 text-primary" />
            <h3 className="font-semibold text-foreground">Ask AI Assistant</h3>
          </div>
          
          <div className="space-y-3 rounded-lg border bg-muted/30 p-4">
            {/* User Question */}
            <div className="flex gap-3">
              <div className="rounded-full bg-secondary p-2 h-fit">
                <User className="h-4 w-4 text-secondary-foreground" />
              </div>
              <div className="flex-1 rounded-lg bg-background border p-3">
                <p className="text-sm text-foreground">
                  Why did sales show a decline in FY23 compared to FY22?
                </p>
              </div>
            </div>

            {/* AI Response */}
            <div className="flex gap-3">
              <div className="rounded-full bg-primary p-2 h-fit">
                <Bot className="h-4 w-4 text-primary-foreground" />
              </div>
              <div className="flex-1 rounded-lg bg-background border p-3">
                <p className="text-sm text-foreground leading-relaxed">
                  The FY23 sales decline was primarily influenced by three factors: <strong>global supply chain disruptions</strong> impacting raw material availability (reducing output by ~12%), <strong>increased competition</strong> in key markets leading to price pressure, and <strong>economic slowdown</strong> in major export regions. However, Plant North maintained resilience with only 3% decline due to diversified product portfolio. Recovery began in Q4 FY23 as supply chains normalized.
                </p>
                <div className="flex items-center gap-2 mt-3 pt-3 border-t">
                  <Badge variant="outline" className="text-xs">
                    Historical Analysis
                  </Badge>
                  <Badge variant="outline" className="text-xs">
                    FY22-FY23
                  </Badge>
                </div>
              </div>
            </div>

            {/* Input Field */}
            <div className="flex gap-2 mt-4">
              <Input
                type="text"
                placeholder="Ask a question about sales trends..."
                value={inputMessage}
                onChange={(e) => setInputMessage(e.target.value)}
                onKeyPress={handleKeyPress}
                className="flex-1"
              />
              <Button 
                onClick={handleSendMessage}
                disabled={!inputMessage.trim()}
                size="icon"
                className="shrink-0"
              >
                <Send className="h-4 w-4" />
              </Button>
            </div>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};
